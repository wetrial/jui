@media (min-width: 768px) {
    .app {
        &,
        body {
            height: 100%;
            overflow: hidden;
        }
    }
    .hbox {
        display: table;
        table-layout: fixed;
        width: 100%;
        height: 100%;
        >div {
            display: table-cell;
            vertical-align: top;
            height: 100%;
        }
        >.hbox-aside {
            width: 200px;
            &.sm {
                width: 150px;
            }
            &.xs {
                width: 70px;
            }
        }
    }
    .vbox {
        position: relative;
        display: table;
        width: 100%;
        height: 100%;
        >.vbox-hd {
            height: 50px;
            padding: 0 15px;
            ~.vbox-bd {
                top: 50px;
            }
        }
        >.vbox-bd {
            top: 0;
            bottom: 0;
            width: 100%;
            position: absolute;

            &.with-ft{
                bottom: 50px;
            }
        }
        >.vbox-bd {
            overflow-x: hidden;
            overflow-y: auto;
        }
        >.vbox-ft{
            position: absolute;
            height: 50px;
            width: 100%;
            bottom: 0;
        }
    }
}

.topbar {
    height: 32px;
}

.header {
    height: 50px;
}

.header-lg {
    height: 80px;
}

.cell-ell {
    display: table;
    table-layout: fixed;
    width: 100%;
    &>*,&>*>* {
        display: table-cell;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

.scrollable {
    -webkit-overflow-scrolling: touch;
}

::-webkit-scrollbar {
    width: 10px;
    height: 10px;
}

::-webkit-scrollbar-thumb {
    background-color: rgba(50, 50, 50, 0.25);
    border: 2px solid transparent;
    border-radius: 10px;
    background-clip: padding-box;
}

::-webkit-scrollbar-thumb:hover {
    background-color: rgba(50, 50, 50, 0.5);
}

::-webkit-scrollbar-track {
    background-color: rgba(50, 50, 50, 0.05);
}

.scrollable {
    overflow-x: hidden;
    overflow-y: auto;
}

.no-touch {
    .scrollable.hover {
        overflow-y: hidden;
        &:hover {
            overflow: visible;
            overflow-y: auto;
        }
    }
     ::-webkit-scrollbar-button {
        width: 10px;
        height: 6px;
        background-color: rgba(50, 50, 50, 0.05);
    }
}

.v-m {
    vertical-align: middle !important;
}

.v-t {
    vertical-align: top !important;
}

.v-b {
    vertical-align: bottom !important;
}

.cell {
    display: table-cell;
    vertical-align: middle;
}

.dib_vm {
    display: inline-block;
    width: 0;
    height: 100%;
    vertical-align: middle;
}

.aside-xs {
    width: 60px;
}

.aside-sm {
    width: 150px;
}

.aside {
    width: 200px;
}

.aside-md {
    width: 240px;
}

.aside-lg {
    width: 300px;
}

.aside-xl {
    width: 360px;
}

.aside-xxl {
    width: 480px;
}

//
// Grid system
// --------------------------------------------------
// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
.container {
    .container-fixed();
    @media (min-width: @screen-sm-min) {
        width: @container-sm;
    }
    @media (min-width: @screen-md-min) {
        width: @container-md;
    }
    @media (min-width: @screen-lg-min) {
        width: @container-lg;
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.
.container-fluid {
    .container-fixed();
}

// Row
//
// Rows contain and clear the floats of your columns.
.row {
    .make-row();
}

// Columns
//
// Common styles for small and large grid columns
.make-grid-columns();
// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.
.make-grid(xs);
// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
@media (min-width: @screen-sm-min) {
    .make-grid(sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
@media (min-width: @screen-md-min) {
    .make-grid(md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
@media (min-width: @screen-lg-min) {
    .make-grid(lg);
}